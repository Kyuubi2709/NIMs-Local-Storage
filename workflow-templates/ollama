apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: fluxai-
spec:
  serviceAccountName: batch-job-sa
  nodeSelector:
    kubernetes.io/hostname: ""
  entrypoint: main
  arguments:
    parameters:
      - name: repoUrl
        value: "https://github.com/Kyuubi2709/NIMs-Local-Storage-Working.git"
      - name: repoBranch
        value: "main"
      - name: cpuResource
        value: "4"             # CPU Limit and Request will be the same
      - name: memoryResource  
        value: "12336"          # Memory Limit and Request will be the same
      - name: storageResource
        value: "50"            # Storage Limit and Request will be the same
      - name: gpuResource
        value: "1"             # GPU Limit and Request will be the same
      - name: volumeName
        value: "16150"  # Placeholder for volume name
      - name: hostPath
        value: "/tmp/fluxedge/16150"  # Placeholder for host path
      - name: mountPath
        value: "/mnt/data"  # Placeholder for mount path
      # Node Selector will be dynamically added by FluxEdge
      # Deployment Information will be dynamically added by FluxEdge
  templates:
  - name: main
    steps:
      - - name: clone-repo
          template: clone-repo
          arguments:
            parameters:
              - name: repoUrl
                value: "{{workflow.parameters.repoUrl}}"
              - name: repoBranch
                value: "{{workflow.parameters.repoBranch}}"
      - - name: kustomize-build
          template: kustomize-build
          arguments:
            parameters:
              - name: nodeSelector
                value: "{{workflow.parameters.nodeSelector}}"
              - name: deploymentInformation
                value: "{{workflow.parameters.deploymentInformation}}"
              - name: cpuResource
                value: "{{workflow.parameters.cpuResource}}"
              - name: memoryResource
                value: "{{workflow.parameters.memoryResource}}"
              - name: storageResource
                value: "{{workflow.parameters.storageResource}}"
              - name: gpuResource
                value: "{{workflow.parameters.gpuResource}}"
              - name: volumeName
                value: "{{workflow.parameters.volumeName}}"
              - name: hostPath
                value: "{{workflow.parameters.hostPath}}"
              - name: mountPath
                value: "{{workflow.parameters.mountPath}}"
            artifacts:
              - name: repo
                from: "{{steps.clone-repo.outputs.artifacts.repo}}"
      - - name: apply-kubectl
          template: apply-kubectl
          arguments:
            artifacts:
              - name: manifests
                from: "{{steps.kustomize-build.outputs.artifacts.manifests}}"

  - name: clone-repo
    inputs:
      parameters:
        - name: repoUrl
        - name: repoBranch
    container:
      image: alpine/git
      command: [sh, -c]
      args:
        - |
          git clone --branch {{inputs.parameters.repoBranch}} {{inputs.parameters.repoUrl}} /workspace &&
          ls /workspace
    outputs:
      artifacts:
        - name: repo
          path: /workspace

  - name: kustomize-build
    inputs:
      parameters:
        - name: nodeSelector
        - name: deploymentInformation
        - name: cpuResource
        - name: memoryResource
        - name: storageResource
        - name: gpuResource
        - name: volumeName
        - name: hostPath
        - name: mountPath
      artifacts:
        - name: repo
          path: /workspace
    script:
      image: line/kubectl-kustomize
      command: [sh]
      source: |
        #!/bin/sh
        cd /workspace/overlays/ollama

        # Replace placeholders in manifests with actual values
        sed -i "s/\NODE_SELECTOR/{{inputs.parameters.nodeSelector}}/g" deployment-patch.yaml
        sed -i "s/\DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" deployment-patch.yaml
        sed -i "s/\DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" service-patch.yaml
        sed -i "s/\DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" kustomization.yaml
        
        sed -i "s/\GPU_RESOURCE/{{inputs.parameters.gpuResource}}/g" deployment-patch.yaml
        sed -i "s/\CPU_RESOURCE/{{inputs.parameters.cpuResource}}/g" deployment-patch.yaml
        sed -i "s/\MEMORY_RESOURCE/{{inputs.parameters.memoryResource}}M/g" deployment-patch.yaml
        sed -i "s/\STORAGE_RESOURCE/{{inputs.parameters.storageResource}}G/g" deployment-patch.yaml
        
        sed -i "s/\VOLUME_NAME/{{inputs.parameters.volumeName}}/g" deployment-patch.yaml
        sed -i "s|\\HOST_PATH|{{inputs.parameters.hostPath}}|g" deployment-patch.yaml
        sed -i "s|\\MOUNT_PATH|{{inputs.parameters.mountPath}}|g" deployment-patch.yaml

        # Generate the manifests using kustomize
        kustomize build . -o /workspace/modified
        ls /workspace/modified
    outputs:
      artifacts:
        - name: manifests
          path: /workspace/modified

  - name: apply-kubectl
    inputs:
      artifacts:
        - name: manifests
          path: /workspace/modified
    container:
      image: bitnami/kubectl:1.21 
      command: [sh, -c]
      args: ["kubectl apply -f /workspace/modified"]
