apiVersion: apps/v1
kind: Deployment
metadata:
  name: -tf-notebook-argocd
spec:
  selector:
    matchLabels:
      flux-deployment-id: DEPLOYMENT_INFORMATION
  template:
    metadata:
      labels:
        flux-deployment-id: DEPLOYMENT_INFORMATION
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 8.8.8.8
          - 1.1.1.1
      securityContext:
        fsGroup: 0
      nodeSelector:
        kubernetes.io/hostname: NODE_SELECTOR
      containers:
        - name: tf-notebook
          image: tensorflow/tensorflow:2.15.0-gpu-jupyter
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8888
          env:
            - name: JUPYTER_TOKEN
              value: "JUPYTER_TOKEN_VALUE"
          volumeMounts:
            - name: "VOLUME_NAME"
              mountPath: MOUNT_PATH
          resources:
            limits:
              nvidia.com/gpu: "{{inputs.parameters.gpuResource}}"               # Placeholder for GPU limit
              cpu: "{{inputs.parameters.cpuResource}}"                          # Placeholder for CPU limit
              memory: "{{inputs.parameters.memoryResource}}M"                   # Placeholder for memory limit (e.g., "4000M")
              ephemeral-storage: "{{inputs.parameters.storageResource}}G"       # Placeholder for storage limit (e.g., "10G")
            requests:
              nvidia.com/gpu: "{{inputs.parameters.gpuResource}}"               # Placeholder for GPU request
              cpu: "{{inputs.parameters.cpuResource}}"                          # Placeholder for CPU request
              memory: "{{inputs.parameters.memoryResource}}M"                   # Placeholder for memory request (e.g., "4000M")
              ephemeral-storage: "{{inputs.parameters.storageResource}}G"       # Placeholder for storage request (e.g., "5G")
      volumes:
        - name: "VOLUME_NAME"
          hostPath:
            path: HOST_PATH
            type: DirectoryOrCreate
      restartPolicy: Always
